#############################13 MARÇO 2018######################################################

@src/simcore_mrsg.cpp: 
Em "run_mrsg_simulation()", alteração das funções de começar a simulação e realizar a leitura 
dos arquivos de plataforma e deploy, do MSG para o S4U;
Em "init_mrsg_config()", troca do uso das estruturas de "msg_host_t" e "msg_process_t" para o 
uso de classes "simgrid::s4u::Host*", "simgrid::s4u::ActorPtr" e seus métodos. Alteração no uso 
de uma lista única de processos para múltiplas listas de actors em cada host mais uma lista 
única de hosts.


#############################15 MARÇO 2018######################################################

@src/common_mrsg.cpp:
Em "send()", alterado também o envio da task por "MSG_task_send()" para o uso de "simgrid::s4u::MailboxPtr"
e o método "put()". Como "put()" não retorna um "msg_error_t", a função "send()" está retornando
MSG_OK artificialmente, será necessário mudar isso eventualmente; 
Em "receive()", alterado o recebimento de uma task através de "MSG_task_receive()" para o uso 
de "simgrid::s4u::MailboxPtr" e o método "get()".  Como "get()" não retorna um "msg_error_t", a
função "receive()" está retornando uma "msg_task_t" caso houve sucesso na comunicação, ou NULL
caso contrário. Isso pode ser necessário mudar eventualmente.

@src/master_mrsg.cpp:
Em "master_mrsg()", trocada a verificação se a task foi recebida corretamente de (status == MSG_OK)
para (task_recebida != NULL) devido as alterações em "receive()".
Em "send_mrsg_task()", alterado também o envio da task por "MSG_task_send()" para o uso de 
"simgrid::s4u::MailboxPtr" e o método "put()".

@src/worker_mrsg.cpp:
Em "listen_mrsg()", trocada a verificação se a task foi recebida corretamente de (status == MSG_OK)
para (task_recebida != NULL) devido as alterações em "receive()";
Em "get_mrsg_chunk()", trocada a verificação se a task foi recebida corretamente de (status == MSG_OK)
para (task_recebida != NULL);
Em "get_mrsg_map_output()", trocada a verificação se a task foi recebida corretamente de (status == MSG_OK)
para (task_recebida != NULL).

@src/dfs_mrsg.cpp:
Em "data_note_mrsg()", trocada a verificação se a task foi recebida corretamente de (status == MSG_OK)
para (task_recebida != NULL).


#############################27 MARÇO 2018######################################################

@include/commom_mrsg.hpp: 
Criada estrutura temporária "mrsg_task_data_capsule_s" para obter acesso as informações de
envio de uma task como o processo que enviou, o processo que recebeu, o host de origem e os
dados enviados.

@src/common_mrsg.cpp:
Em "send()", adicionado uso da estrutura "mrsg_task_data_capsule_s" para encapsular os dados a 
serem enviados com informações do host e proceso de origem.

@src/master_mrsg.cpp:
Em "master_mrsg()", adicionado uso  da estrutura "mrsg_task_data_capsule_s" para obter o host de
origem e os dados enviados com a task;
Em "task_time_elapsed_mrsg()", adicionado uso  da estrutura "mrsg_task_data_capsule_s" para obter
os dados enviados com a task;
Em "set_mrsg_speculative_tasks()", adicionado uso  da estrutura "mrsg_task_data_capsule_s" para obter
os dados enviados com a task.

@src/dfs_mrsg.cpp:
Em "send_mrsg_data()", adicionado uso  da estrutura "mrsg_task_data_capsule_s" para obter
os dados enviados com a task.


#############################29 MARÇO 2018######################################################

@src/common_mrsg.cpp:
Criada função "send_async()" que funciona como "send()", porém é não bloqueante. Na implementação
corrente ela ainda bloqueia, talvez seja preciso achar uma alternativa que seja realmente não
bloqueante, ou esperar a disponibilização de uma pelo SimGrid.

@include/commom_mrsg.hpp: 
Adicionado cabeçalho da função "send_async()".

@src/dfs_mrsg.cpp:
Em "send_mrsg_data()", alterado o envio da task de "MSG_task_dsend()" para "send_async()". 


